{
    "chapters": [
        {
            "path": "/texts/course/config.yml",
            "status": {
                "total": 111,
                "correct": 30.7
            }
        },
        {
            "path": "/texts/course/1. Vectors/config.yml",
            "status": {
                "total": 34,
                "correct": 20
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/config.yml",
            "status": {
                "total": 39,
                "correct": 10.7
            }
        },
        {
            "path": "/texts/course/3. Matrices/config.yml",
            "status": {
                "total": 23,
                "correct": 0
            }
        },
        {
            "path": "/texts/course/4. Linear Transforms/config.yml",
            "status": {
                "total": 15,
                "correct": 0
            }
        }
    ],
    "lessons": [
        {
            "path": "/texts/course/2. Vector Spaces/Spans/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    0,
                    4,
                    3,
                    5
                ]
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Linear Dependency/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    0,
                    6
                ]
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Linear Independency 1/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    4,
                    0,
                    3,
                    5,
                    6
                ]
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Linear Independency 2/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    4,
                    2
                ]
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Linear Dependensy and Orthonormalization/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Orthonormalization Algorithm/config.yml",
            "status": {
                "correct": 5.699999999999999,
                "total": 10,
                "testStatus": [
                    {
                        "name": "root -> orthonormalized -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 1",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.055898881087468946"
                    },
                    {
                        "name": "root -> orthonormalized -> 2",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.06305390400813678"
                    },
                    {
                        "name": "root -> orthonormalized -> 3",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.0550381448860663"
                    },
                    {
                        "name": "root -> orthonormalized -> 4",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.22175216863384017"
                    },
                    {
                        "name": "root -> orthonormalized -> 5",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.09107748140668727"
                    },
                    {
                        "name": "root -> orthonormalized -> 6",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 7",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.07006777693864065"
                    },
                    {
                        "name": "root -> orthonormalized -> 8",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.06397967432896243"
                    },
                    {
                        "name": "root -> orthonormalized -> 9",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.24001059174694656"
                    },
                    {
                        "name": "root -> orthonormalized -> 10",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 11",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.04102715982279489"
                    },
                    {
                        "name": "root -> orthonormalized -> 12",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 13",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 14",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 15",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 16",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.02573171569482076"
                    },
                    {
                        "name": "root -> orthonormalized -> 17",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 18",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.1976729547148913"
                    },
                    {
                        "name": "root -> orthonormalized -> 19",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.03552925921934623"
                    },
                    {
                        "name": "root -> orthonormalized -> 20",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 21",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 22",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 23",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 24",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.13651119028399664"
                    },
                    {
                        "name": "root -> orthonormalized -> 25",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.20978274382954124"
                    },
                    {
                        "name": "root -> orthonormalized -> 26",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 27",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.20384851384289254"
                    },
                    {
                        "name": "root -> orthonormalized -> 28",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.1216156611616895"
                    },
                    {
                        "name": "root -> orthonormalized -> 29",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 30",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.262795133118132"
                    },
                    {
                        "name": "root -> orthonormalized -> 31",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 32",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.08754063088970619"
                    },
                    {
                        "name": "root -> orthonormalized -> 33",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 34",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 35",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 36",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.07074355393452275"
                    },
                    {
                        "name": "root -> orthonormalized -> 37",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 38",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.23577247147271332"
                    },
                    {
                        "name": "root -> orthonormalized -> 39",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 40",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.08827565032124399"
                    },
                    {
                        "name": "root -> orthonormalized -> 41",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.029936266396959232"
                    },
                    {
                        "name": "root -> orthonormalized -> 42",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.23852295055249678"
                    },
                    {
                        "name": "root -> orthonormalized -> 43",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 44",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 45",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 46",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 47",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.2533125283439342"
                    },
                    {
                        "name": "root -> orthonormalized -> 48",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 49",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 50",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 51",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 52",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 53",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 54",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.09999948537528665"
                    },
                    {
                        "name": "root -> orthonormalized -> 55",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 56",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 57",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.05372989792891052"
                    },
                    {
                        "name": "root -> orthonormalized -> 58",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.15986950013287368"
                    },
                    {
                        "name": "root -> orthonormalized -> 59",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.2903776840313313"
                    },
                    {
                        "name": "root -> orthonormalized -> 60",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 61",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 62",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.2869388654775758"
                    },
                    {
                        "name": "root -> orthonormalized -> 63",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 64",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.2449953764342821"
                    },
                    {
                        "name": "root -> orthonormalized -> 65",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 66",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.07241443026740085"
                    },
                    {
                        "name": "root -> orthonormalized -> 67",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 68",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 69",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 70",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 71",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 72",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 73",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 74",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.03316665270329559"
                    },
                    {
                        "name": "root -> orthonormalized -> 75",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.2504970244955098"
                    },
                    {
                        "name": "root -> orthonormalized -> 76",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 77",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 78",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.25956782259167704"
                    },
                    {
                        "name": "root -> orthonormalized -> 79",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 80",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.24910822068071847"
                    },
                    {
                        "name": "root -> orthonormalized -> 81",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.23388640441392158"
                    },
                    {
                        "name": "root -> orthonormalized -> 82",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 83",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 84",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.12435923148830769"
                    },
                    {
                        "name": "root -> orthonormalized -> 85",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 86",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 87",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 88",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 89",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 90",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 91",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.17568188577505806"
                    },
                    {
                        "name": "root -> orthonormalized -> 92",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.09359926189642709"
                    },
                    {
                        "name": "root -> orthonormalized -> 93",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.23646483467279011"
                    },
                    {
                        "name": "root -> orthonormalized -> 94",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.040912275610277445"
                    },
                    {
                        "name": "root -> orthonormalized -> 95",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 96",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 97",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.09649548304328366"
                    },
                    {
                        "name": "root -> orthonormalized -> 98",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> orthonormalized -> 99",
                        "ok": false,
                        "status": "FAILED: answers do not match:\nMaximal average mismatch: 0.0001\nRecieved average mismatch: 0.11551991141960638"
                    }
                ]
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Basis/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Coordinates/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Orthonormal Coordinates/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Coordinates and Basis Practice/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Hyperplanes/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    1,
                    4,
                    8,
                    2,
                    6,
                    7,
                    0
                ]
            }
        },
        {
            "path": "/texts/course/2. Vector Spaces/Hyperplanes and Subspaces/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/1. Vectors/Length of Vector Proof/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ]
            }
        },
        {
            "path": "/texts/course/1. Vectors/Sum of Vectors Quiz/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    4,
                    6,
                    3
                ]
            }
        },
        {
            "path": "/texts/course/1. Vectors/Sum of Vectors Quiz 2/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    2,
                    0,
                    7,
                    5,
                    3
                ]
            }
        },
        {
            "path": "/texts/course/1. Vectors/Scaling Quiz/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    1,
                    6,
                    3,
                    4,
                    2
                ]
            }
        },
        {
            "path": "/texts/course/1. Vectors/Scalar Product Quiz/config.yml",
            "status": {
                "total": 1,
                "correct": 1,
                "selectedVariantIds": [
                    2,
                    0,
                    4,
                    6
                ]
            }
        },
        {
            "path": "/texts/course/1. Vectors/Scalar Product Proof/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/1. Vectors/Geometric Meaning Quiz/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/1. Vectors/Orthonormalisation Quiz/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/1. Vectors/Numpy Practice/config.yml",
            "status": {
                "correct": 15,
                "total": 15,
                "testStatus": [
                    {
                        "name": "root -> vectors -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> vectors -> 1",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> vectors -> 2",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> vectors -> 3",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> slices -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> slices -> 1",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> slices -> 2",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> slices -> 3",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> slices -> 4",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> slices -> 5",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> deep_copy -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> deep_copy -> 1",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> deep_copy -> 2",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> deep_copy -> 3",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> deep_copy -> 4",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> deep_copy -> 5",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> deep_copy -> 6",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> shapes -> 0 -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> shapes -> 1 -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> shapes -> 2 -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> shapes -> 3 -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> sliced_reshaped -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> sliced_reshaped -> 1",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> sliced_reshaped -> 2",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> sliced_reshaped -> 3",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> lovely -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> lovely -> 1",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> lovely -> 2",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> lovely -> 3",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> expression -> 0",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> expression -> 1",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> expression -> 2",
                        "ok": true,
                        "status": "OK"
                    },
                    {
                        "name": "root -> expression -> 3",
                        "ok": true,
                        "status": "OK"
                    }
                ]
            }
        },
        {
            "path": "/texts/course/1. Vectors/Vectors Practice/config.yml",
            "status": {
                "total": 10,
                "correct": 0,
                "testStatus": [],
                "error": [
                    "[NbClientApp] Executing .laborantum/texts/course/1. Vectors/Vectors Practice/task.ipynb",
                    "[NbClientApp] Executing notebook with kernel: python3",
                    "Traceback (most recent call last):",
                    "  File \"/usr/local/lib/python3.11/site-packages/jupyter_core/utils/__init__.py\", line 154, in wrapped",
                    "    asyncio.get_running_loop()",
                    "RuntimeError: no running event loop",
                    "",
                    "During handling of the above exception, another exception occurred:",
                    "",
                    "Traceback (most recent call last):",
                    "  File \"/usr/local/bin/jupyter-execute\", line 8, in <module>",
                    "    sys.exit(main())",
                    "             ^^^^^^",
                    "  File \"/usr/local/lib/python3.11/site-packages/jupyter_core/application.py\", line 284, in launch_instance",
                    "    super().launch_instance(argv=argv, **kwargs)",
                    "  File \"/usr/local/lib/python3.11/site-packages/traitlets/config/application.py\", line 1074, in launch_instance",
                    "    app.initialize(argv)",
                    "  File \"/usr/local/lib/python3.11/site-packages/traitlets/config/application.py\", line 118, in inner",
                    "    return method(app, *args, **kwargs)",
                    "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "  File \"/usr/local/lib/python3.11/site-packages/nbclient/cli.py\", line 161, in initialize",
                    "    self.run_notebook(path)",
                    "  File \"/usr/local/lib/python3.11/site-packages/nbclient/cli.py\", line 215, in run_notebook",
                    "    client.execute()",
                    "  File \"/usr/local/lib/python3.11/site-packages/jupyter_core/utils/__init__.py\", line 158, in wrapped",
                    "    return loop.run_until_complete(inner)",
                    "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
                    "  File \"/usr/local/lib/python3.11/asyncio/base_events.py\", line 654, in run_until_complete",
                    "    return future.result()",
                    "           ^^^^^^^^^^^^^^^",
                    "  File \"/usr/local/lib/python3.11/site-packages/nbclient/client.py\", line 709, in async_execute",
                    "    await self.async_execute_cell(",
                    "  File \"/usr/local/lib/python3.11/site-packages/nbclient/client.py\", line 1062, in async_execute_cell",
                    "    await self._check_raise_for_error(cell, cell_index, exec_reply)",
                    "  File \"/usr/local/lib/python3.11/site-packages/nbclient/client.py\", line 918, in _check_raise_for_error",
                    "    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)",
                    "nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:",
                    "------------------",
                    "json_tricks.dump(answers, '.answer.json')",
                    "------------------",
                    "",
                    "",
                    "\u001b[31m---------------------------------------------------------------------------\u001b[39m",
                    "\u001b[31mValueError\u001b[39m                                Traceback (most recent call last)",
                    "\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[15]\u001b[39m\u001b[32m, line 1\u001b[39m",
                    "\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[43mjson_tricks\u001b[49m\u001b[43m.\u001b[49m\u001b[43mdump\u001b[49m\u001b[43m(\u001b[49m\u001b[43manswers\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43m.answer.json\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m)\u001b[49m",
                    "",
                    "\u001b[36mFile \u001b[39m\u001b[32m/usr/local/lib/python3.11/site-packages/json_tricks/nonp.py:151\u001b[39m, in \u001b[36mdump\u001b[39m\u001b[34m(obj, fp, sort_keys, cls, obj_encoders, extra_obj_encoders, primitives, compression, force_flush, allow_nan, conv_str_byte, fallback_encoders, properties, **jsonkwargs)\u001b[39m",
                    "\u001b[32m    149\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m (\u001b[38;5;28misinstance\u001b[39m(obj, str_type) \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mhasattr\u001b[39m(obj, \u001b[33m'\u001b[39m\u001b[33mwrite\u001b[39m\u001b[33m'\u001b[39m)) \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(fp, (\u001b[38;5;28mlist\u001b[39m, \u001b[38;5;28mdict\u001b[39m)):",
                    "\u001b[32m    150\u001b[39m \t\u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[33m'\u001b[39m\u001b[33mjson-tricks dump arguments are in the wrong order: provide the data to be serialized before file handle\u001b[39m\u001b[33m'\u001b[39m)",
                    "\u001b[32m--> \u001b[39m\u001b[32m151\u001b[39m txt = \u001b[43mdumps\u001b[49m\u001b[43m(\u001b[49m\u001b[43mobj\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msort_keys\u001b[49m\u001b[43m=\u001b[49m\u001b[43msort_keys\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mcls\u001b[39;49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mcls\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mobj_encoders\u001b[49m\u001b[43m=\u001b[49m\u001b[43mobj_encoders\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mextra_obj_encoders\u001b[49m\u001b[43m=\u001b[49m\u001b[43mextra_obj_encoders\u001b[49m\u001b[43m,\u001b[49m",
                    "\u001b[32m    152\u001b[39m \u001b[43m\t\u001b[49m\u001b[43mprimitives\u001b[49m\u001b[43m=\u001b[49m\u001b[43mprimitives\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcompression\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcompression\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mallow_nan\u001b[49m\u001b[43m=\u001b[49m\u001b[43mallow_nan\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconv_str_byte\u001b[49m\u001b[43m=\u001b[49m\u001b[43mconv_str_byte\u001b[49m\u001b[43m,\u001b[49m",
                    "\u001b[32m    153\u001b[39m \u001b[43m\t\u001b[49m\u001b[43mfallback_encoders\u001b[49m\u001b[43m=\u001b[49m\u001b[43mfallback_encoders\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mproperties\u001b[49m\u001b[43m=\u001b[49m\u001b[43mproperties\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mjsonkwargs\u001b[49m\u001b[43m)\u001b[49m",
                    "\u001b[32m    154\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(fp, str_type):",
                    "\u001b[32m    155\u001b[39m \t\u001b[38;5;28;01mif\u001b[39;00m compression:",
                    "",
                    "\u001b[36mFile \u001b[39m\u001b[32m/usr/local/lib/python3.11/site-packages/json_tricks/nonp.py:125\u001b[39m, in \u001b[36mdumps\u001b[39m\u001b[34m(obj, sort_keys, cls, obj_encoders, extra_obj_encoders, primitives, compression, allow_nan, conv_str_byte, fallback_encoders, properties, **jsonkwargs)\u001b[39m",
                    "\u001b[32m    121\u001b[39m \t\u001b[38;5;28mcls\u001b[39m = TricksEncoder",
                    "\u001b[32m    122\u001b[39m combined_encoder = \u001b[38;5;28mcls\u001b[39m(sort_keys=sort_keys, obj_encoders=encoders, allow_nan=allow_nan,",
                    "\u001b[32m    123\u001b[39m \tprimitives=primitives, fallback_encoders=fallback_encoders,",
                    "\u001b[32m    124\u001b[39m   \tproperties=properties, **jsonkwargs)",
                    "\u001b[32m--> \u001b[39m\u001b[32m125\u001b[39m txt = \u001b[43mcombined_encoder\u001b[49m\u001b[43m.\u001b[49m\u001b[43mencode\u001b[49m\u001b[43m(\u001b[49m\u001b[43mobj\u001b[49m\u001b[43m)\u001b[49m",
                    "\u001b[32m    126\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m is_py3 \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(txt, \u001b[38;5;28mstr\u001b[39m):",
                    "\u001b[32m    127\u001b[39m \ttxt = unicode(txt, ENCODING)",
                    "",
                    "\u001b[36mFile \u001b[39m\u001b[32m/usr/local/lib/python3.11/json/encoder.py:200\u001b[39m, in \u001b[36mJSONEncoder.encode\u001b[39m\u001b[34m(self, o)\u001b[39m",
                    "\u001b[32m    196\u001b[39m         \u001b[38;5;28;01mreturn\u001b[39;00m encode_basestring(o)",
                    "\u001b[32m    197\u001b[39m \u001b[38;5;66;03m# This doesn't pass the iterator directly to ''.join() because the\u001b[39;00m",
                    "\u001b[32m    198\u001b[39m \u001b[38;5;66;03m# exceptions aren't as detailed.  The list call should be roughly\u001b[39;00m",
                    "\u001b[32m    199\u001b[39m \u001b[38;5;66;03m# equivalent to the PySequence_Fast that ''.join() would do.\u001b[39;00m",
                    "\u001b[32m--> \u001b[39m\u001b[32m200\u001b[39m chunks = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43miterencode\u001b[49m\u001b[43m(\u001b[49m\u001b[43mo\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_one_shot\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m",
                    "\u001b[32m    201\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(chunks, (\u001b[38;5;28mlist\u001b[39m, \u001b[38;5;28mtuple\u001b[39m)):",
                    "\u001b[32m    202\u001b[39m     chunks = \u001b[38;5;28mlist\u001b[39m(chunks)",
                    "",
                    "\u001b[36mFile \u001b[39m\u001b[32m/usr/local/lib/python3.11/json/encoder.py:258\u001b[39m, in \u001b[36mJSONEncoder.iterencode\u001b[39m\u001b[34m(self, o, _one_shot)\u001b[39m",
                    "\u001b[32m    253\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:",
                    "\u001b[32m    254\u001b[39m     _iterencode = _make_iterencode(",
                    "\u001b[32m    255\u001b[39m         markers, \u001b[38;5;28mself\u001b[39m.default, _encoder, \u001b[38;5;28mself\u001b[39m.indent, floatstr,",
                    "\u001b[32m    256\u001b[39m         \u001b[38;5;28mself\u001b[39m.key_separator, \u001b[38;5;28mself\u001b[39m.item_separator, \u001b[38;5;28mself\u001b[39m.sort_keys,",
                    "\u001b[32m    257\u001b[39m         \u001b[38;5;28mself\u001b[39m.skipkeys, _one_shot)",
                    "\u001b[32m--> \u001b[39m\u001b[32m258\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_iterencode\u001b[49m\u001b[43m(\u001b[49m\u001b[43mo\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[32;43m0\u001b[39;49m\u001b[43m)\u001b[49m",
                    "",
                    "\u001b[31mValueError\u001b[39m: Out of range float values are not JSON compliant",
                    "",
                    ""
                ]
            }
        },
        {
            "path": "/texts/course/3. Matrices/Matrix/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/3. Matrices/Matrices Manual Exercise/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/3. Matrices/Matrix Product Quiz/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/3. Matrices/Matrix Product Optimal Order/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/3. Matrices/Matrix Product/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/4. Linear Transforms/Functions as Transforms/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/4. Linear Transforms/Linear Transforms/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/4. Linear Transforms/Invertible Matrices/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/4. Linear Transforms/Invertible Matrices II/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/4. Linear Transforms/Invertible Matrices III/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        },
        {
            "path": "/texts/course/4. Linear Transforms/Some Interesting Linear Transforms/config.yml",
            "status": {
                "total": 1,
                "correct": 0,
                "selectedVariantIds": []
            }
        }
    ]
}